@inherits CreateBase
@using Microsoft.AspNetCore.Authorization

@page "/rating/create"
@attribute [Authorize]

<h1>Create</h1>

@if (!OperationSuccess)
{

    <EditForm Model="RatingModel" OnValidSubmit="@HandleValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary Model="@RatingModel" />

        <div class="form-row">
            <label>Moodys Rating</label>
            <InputText @bind-Value="@RatingModel.MoodysRating" id="MoodysRating" placeholder="Moodys Rating" class="form-control" />
            <ValidationMessage For="@(() => RatingModel.MoodysRating)" class="text-danger" />
        </div>

        <div class="form-row">
            <label>SandP Rating</label>
            <InputText @bind-Value="@RatingModel.SandPrating" id="SandPrating" placeholder="SandP Rating" class="form-control" />
            <ValidationMessage For="@(() => RatingModel.SandPrating)" class="text-danger" />
        </div>

        <div class="form-row">
            <label>Fitch Rating</label>
            <InputText @bind-Value="@RatingModel.FitchRating" id="FitchRating" placeholder="Fitch Rating" class="form-control" />
            <ValidationMessage For="@(() => RatingModel.FitchRating)" class="text-danger" />
        </div>

        <div class="form-row">
            <label>Order Number</label>
            <InputNumber @bind-Value="@RatingModel.OrderNumber" id="OrderNumber" placeholder="Order Number" class="form-control" />
            <ValidationMessage For="@(() => RatingModel.OrderNumber)" class="text-danger" />
        </div>

        <button type="submit" class="btn btn-success btn-lg mt-4">Update</button>
        <button @onclick="@CancelCreate" class="btn btn-danger btn-lg mt-4">Cancel</button>

    </EditForm>

}
else
{
    <p>The item was successfully updated.</p>

    <button class="btn btn-info" @onclick="ReturnHome">Home</button>
}